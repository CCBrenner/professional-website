@inherits LayoutComponentBase
@inject UIService UI
@implements IDisposable

<div class="page-container">
    <div class="page">

        @* Part of Option1: This element covers all contents in the viewport if the viewport is not mobile (z-index: 60) *@
        @* <ClosedStageCurtain /> *@

        @* Part of Option2: On large screens (desktop) shows instructions and animation controls *@
        @*
        <div class="left-negative-space">
            @if (ExternalLayoutControls)
            {
                <article class="animate-app external-layout-controls">
                    <AppAnimations 
                        FirstAnimationCallback="PlayFirstAnimation"
                        SecondAnimationCallback="PlaySecondAnimation"
                        ThirdAnimationCallback="PlayThirdAnimation"
                        FourthAnimationCallback="PlayFourthAnimation"
                        FifthAnimationCallback="PlayFifthAnimation" />
                </article>
            }
            else 
            {
                <p>
                    Download this app today on any mobile device using the QR code on the right!
                </p>
                <p>&nbsp;</p>
                <p>
                    Or use your mobile browser to install this progressive web app (PWA) as an app on your device's homescreen!
                </p>
                <br />
                <button class="btn btn-danger" @onclick="SetExternalLayoutControlsToTrue">Animations</button>
            }
        </div>
        *@

        <main class="main @UI.AnimateMain">

            @* Alert (proprietary) *@
            @*<div class=""></div>*@

            @* Buttons (z-index: 40) *@
            <NavButtons />

            @* Panels (z-index: 30) *@
            <NavPanels />

            <div class="anim-icon @UI.Panels[0].PanelButtonStatus" @onclick="(()=>UI.TogglePanel(0))">
                <span class="fa-solid fa-magnet" aria-hidden="true"></span>
            </div>

            <div class="anim-controls @UI.Panels[0].PanelStatus">
                <h4>Animations</h4>
                <div class="anim-pair" @onclick="(()=>UI.ToggleOnePlayAnimation(0))">
                    <div class="anim-regular">
                        Bombastic
                    </div>
                    <div class="anim-continuous" @onclick="(()=>UI.ToggleContinuousAnimation(0))">
                        <span class="fa-solid fa-infinity" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(1))">
                        Skywalker
                    </div>
                    <div class="anim-continuous" @onclick="(()=>UI.ToggleContinuousAnimation(1))">
                        <span class="fa-solid fa-infinity" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(2))">
                        Kitchen Sink
                    </div>
                    <div class="anim-continuous" @onclick="(()=>UI.ToggleContinuousAnimation(2))">
                        <span class="fa-solid fa-infinity" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(3))">
                        Flipster
                    </div>
                    <div class="anim-continuous" @onclick="(()=>UI.ToggleContinuousAnimation(3))">
                        <span class="fa-solid fa-infinity" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(4))">
                        Asteroid
                    </div>
                    <div class="anim-continuous" @onclick="(()=>UI.ToggleContinuousAnimation(4))">
                        <span class="fa-solid fa-infinity" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(6))">
                        FlipOnX
                    </div>
                    <div class="anim-continuous"></div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(5))">
                        FlipOnY
                    </div>
                    <div class="anim-continuous"></div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(10))">
                        RotateOnZ
                    </div>
                    <div class="anim-continuous"></div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(7))">
                        East Is Up
                    </div>
                    <div class="anim-continuous"></div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleOnePlayAnimation(8))">
                        West Is Up
                    </div>
                    <div class="anim-continuous"></div>
                </div>
                <div class="anim-pair">
                    <div class="anim-regular" @onclick="(()=>UI.ToggleContinuousAnimation(9))">
                        SloRo (<span class="fa-solid fa-infinity" aria-hidden="true"></span>)
                    </div>
                    <div class="anim-continuous"></div>
                </div>
            </div>

            @* Behind Panel (z-index: 20) *@
            <div class="behind-panel 
                @behindPanelStatus()"
                @onclick="UI.DeactivateCooperativePanels"></div>

            @* original Main items (z-index: auto) *@
            <div class="container-fluid header">
                <a class="navbar-brand" href="collyn/23" @onclick='(()=>UI.NavigateToSection("contact"))'>
                    <i class="navbar-brand-icon-one fa-solid fa-terminal"></i>
                    &nbsp;
                    @* Only one of the below will show at a time based on CSS *@
                    <span class="title-size-largest">Collyn Brenner's Developer Portfolio</span>
                    <span class="title-size-four">Collyn Brenner's Dev Portfolio</span>
                    <span class="title-size-three">Collyn's Developer Portfolio</span>
                    <span class="title-size-two">Collyn's Dev Portfolio</span>
                    <span class="title-size-one">Collyn's Portfolio</span>
                    @* On hover *@
                    <div class="navbar-brand-onhover">
                        <i class="fa-solid fa-envelope"></i>
                        Contact Me
                    </div>
                </a>
            </div>
            @* Below is not used. *@
            @*
            <div class="top-row fixed-top px-4">
                <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            </div>
            *@
            <article class="content @blurMainStatus()">
                @Body
            </article>
            
            @* single custom page having controls that manipulate the app w/animations (z-index: auto) *@
            <article class="animate-app
                @UI.Panels[7].PanelStatus
                @blurMainStatus()">
                <h3>App Animations</h3>
                <br />
                <div class="layout-control-item">
                    <button class="btn btn-primary" @onclick="(()=>UI.ToggleAnimation(0))">
                        Bombastic
                    </button>
                    &nbsp;&nbsp;
                    <input class="form-check-input" type="checkbox" @bind="@UI.IsContinuous[0]" />
                    &nbsp;Continuous
                </div>
                <div class="layout-control-item">
                    <button class="btn btn-primary" @onclick="(()=>UI.ToggleAnimation(1))">
                        Sky Walker
                    </button>
                    &nbsp;&nbsp;
                    <input class="form-check-input" type="checkbox" @bind="@UI.IsContinuous[1]" />
                    &nbsp;Continuous
                </div>
                <div class="layout-control-item">
                    <button class="btn btn-primary" @onclick="(()=>UI.ToggleAnimation(2))">
                        Kitchen Sink
                    </button>
                    &nbsp;&nbsp;
                    <input class="form-check-input" type="checkbox" @bind="@UI.IsContinuous[2]" />
                    &nbsp;Continuous
                </div>
                <div class="layout-control-item">
                    <button class="btn btn-primary" @onclick="(()=>UI.ToggleAnimation(3))">
                        Flipster
                    </button>
                    &nbsp;&nbsp;
                    <input class="form-check-input" type="checkbox" @bind="@UI.IsContinuous[3]" />
                    &nbsp;Continuous
                </div>
                <div class="layout-control-item">
                    <button class="btn btn-primary" @onclick="(()=>UI.ToggleAnimation(4))">
                        Asteroid
                    </button>
                    &nbsp;&nbsp;
                    <input class="form-check-input" type="checkbox" @bind="@UI.IsContinuous[4]" />
                    &nbsp;Continuous
                </div>
            </article>
        </main>

        @* Part of Option2 && Option3: QR Code (for lookup via mobile) *@
        @*
        <div class="right-negative-space">
            <div class="qr-code">
                <img src="media/images/frame.png" class="qr-code-image" />
            </div>
        </div>
        *@

        @* Discontinue Button (z-index: 50, position: fixed) *@
        <div class="continuous-animate-stop @UI.Panels[8].PanelStatus">
            <button class="btn btn-danger" @onclick='UI.DiscontinueAnimation'>Discontinue</button>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized() =>
        UI.OnUiServiceChanged += UpdateThisComponent;
    void IDisposable.Dispose() =>
        UI.OnUiServiceChanged += UpdateThisComponent;
    private void UpdateThisComponent(string meaningless) =>
        StateHasChanged();

    private string blurMainStatus()
    {
        // if any panels are true, blur main
        List<int> panelIds = new List<int>() { 0, 2, 3, 4, 5, 6 };
        foreach (int index in panelIds)
            if (UI.Panels[index] != null)
                if (UI.Panels[index].BlurIsActive)
                    return "content-blur";
        return "";
    }
    private string behindPanelStatus()
    {
        // if any panels are true, show behind panel
        List<int> panelIds = new List<int>() { 0, 2, 3, 4, 5, 6 };
        foreach (int index in panelIds)
            if (UI.Panels[index] != null)
                if (UI.Panels[index].BehindPanelIsActive)
                    return "button-on-show-behind-panel";
        return "";
    }
}
