@using ProfessionalWebsite.Client.Classes.NavMgmt;

<div class="container-one">
    <div class="container-two">
        <div class="nav-button @StatusA" @onclick="(()=>UpdateNav(0))">
            <span class="button-icon fa-solid fa-diagram-project" aria-hidden="true"></span>
            <span class="button-label">Projects</span>
        </div>
        <div class="nav-button @StatusB" @onclick="(()=>UpdateNav(1))">
            <span class="button-icon fa-solid fa-flask" aria-hidden="true"></span>
            <span class="button-label">Know-How</span>
        </div>
        <div class="nav-button @StatusC" @onclick="(()=>UpdateNav(2))">
            <span class="button-icon fa-solid fa-book" aria-hidden="true"></span>
            <span class="button-label">Collyn</span>
        </div>
        <div class="nav-button @StatusD" @onclick="(()=>UpdateNav(3))">
            <span class="button-icon fa-solid fa-warehouse" aria-hidden="true"></span>
            <span class="button-label">Invent</span>
        </div>
        <div class="nav-button @StatusE" @onclick="(()=>UpdateNav(4))">
            <span class="button-icon fa-solid fa-newspaper" aria-hidden="true"></span>
            <span class="button-label">Articles</span>
        </div>
    </div>
</div>

@code
{
    private NavMgmt navMgmt = NavMgmt.Instance;

    [Parameter]
    public string StatusA { get; set; } = "";
    [Parameter]
    public string StatusB { get; set; } = "";
    [Parameter]
    public string StatusC { get; set; } = "";
    [Parameter]
    public string StatusD { get; set; } = "";
    [Parameter]
    public string StatusE { get; set; } = "";
    [Parameter]
    public EventCallback<int> UpdateNavCallback { get; set; }
    private async Task UpdateNav(int index) =>
        await UpdateNavCallback.InvokeAsync(index);
}
