@implements IDisposable

<div class="container-one">
    <div class="container-two">
        <div class="nav-button @App.Panel.Panels[2].PanelButtonStatus" @onclick="(()=>App.TogglePanel(2))">
            <span class="button-icon fa-solid fa-diagram-project" aria-hidden="true"></span>
            <span class="button-label">Projects</span>
        </div>
        <div class="nav-button @App.Panel.Panels[3].PanelButtonStatus" @onclick="(()=>App.TogglePanel(3))">
            <span class="button-icon fa-solid fa-flask" aria-hidden="true"></span>
            <span class="button-label">Know-How</span>
        </div>
        <div class="nav-button @App.Panel.Panels[4].PanelButtonStatus" @onclick="(()=>App.TogglePanel(4))">
            <span class="button-icon fa-solid fa-book" aria-hidden="true"></span>
            <span class="button-label">Collyn</span>
        </div>
        <div class="nav-button @App.Panel.Panels[5].PanelButtonStatus" @onclick="(()=>App.TogglePanel(5))">
            <span class="button-icon fa-solid fa-warehouse" aria-hidden="true"></span>
            <span class="button-label">Invent</span>
        </div>
        <div class="nav-button @App.Panel.Panels[6].PanelButtonStatus" @onclick="(()=>App.TogglePanel(6))">
            <span class="button-icon fa-solid fa-newspaper" aria-hidden="true"></span>
            <span class="button-label">Articles</span>
        </div>
    </div>
</div>

@code
{
    [CascadingParameter]
    public App? App { get; private set; }
    protected override void OnInitialized() =>
        App.Panel.OnPanelMgmtUpdated += UpdateThisComponent;
    void IDisposable.Dispose() =>
        App.Panel.OnPanelMgmtUpdated += UpdateThisComponent;
    private void UpdateThisComponent(string meaningless) =>
        StateHasChanged();
}
