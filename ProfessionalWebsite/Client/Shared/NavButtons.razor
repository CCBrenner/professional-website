@using ProfessionalWebsite.Client.Classes.NavMgmt;
@using ProfessionalWebsite.Client.Classes.PanelMgmt;
@implements IDisposable

<div class="container-one">
    <div class="container-two">
        <div class="nav-button @panelMgmt.Panels[2].PanelButtonStatus" @onclick="(()=>panelMgmt.ActivatePanel(2))">
            <span class="button-icon fa-solid fa-diagram-project" aria-hidden="true"></span>
            <span class="button-label">Projects</span>
        </div>
        <div class="nav-button @panelMgmt.Panels[3].PanelButtonStatus" @onclick="(()=>panelMgmt.ActivatePanel(3))">
            <span class="button-icon fa-solid fa-flask" aria-hidden="true"></span>
            <span class="button-label">Know-How</span>
        </div>
        <div class="nav-button @panelMgmt.Panels[4].PanelButtonStatus" @onclick="(()=>panelMgmt.ActivatePanel(4))">
            <span class="button-icon fa-solid fa-book" aria-hidden="true"></span>
            <span class="button-label">Collyn</span>
        </div>
        <div class="nav-button @panelMgmt.Panels[5].PanelButtonStatus" @onclick="(()=>panelMgmt.ActivatePanel(5))">
            <span class="button-icon fa-solid fa-warehouse" aria-hidden="true"></span>
            <span class="button-label">Invent</span>
        </div>
        <div class="nav-button @panelMgmt.Panels[6].PanelButtonStatus" @onclick="(()=>panelMgmt.ActivatePanel(6))">
            <span class="button-icon fa-solid fa-newspaper" aria-hidden="true"></span>
            <span class="button-label">Articles</span>
        </div>
    </div>
</div>

@code
{
    private NavMgmt navMgmt = NavMgmt.Instance;
    private PanelMgmt panelMgmt = PanelMgmt.Instance;

    protected override void OnInitialized() =>
        panelMgmt.OnPanelMgmtUpdated += UpdateThisComponent;
    void IDisposable.Dispose() =>
        panelMgmt.OnPanelMgmtUpdated += UpdateThisComponent;
    private void UpdateThisComponent(string meaningless) =>
        StateHasChanged();
    @*
    [Parameter]
    public int StartingIndex { get; set; } = 0;
    [Parameter]
    public string StatusA { get; set; } = "";
    [Parameter]
    public string StatusB { get; set; } = "";
    [Parameter]
    public string StatusC { get; set; } = "";
    [Parameter]
    public string StatusD { get; set; } = "";
    [Parameter]
    public string StatusE { get; set; } = "";
    [Parameter]
    public EventCallback<int> OnClickButtonCallback { get; set; }
    private async Task UpdatePanels(int index) =>
        await OnClickButtonCallback.InvokeAsync(index);
        *@
}
